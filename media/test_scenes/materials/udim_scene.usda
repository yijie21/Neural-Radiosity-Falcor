#usda 1.0
(
    doc = """Generated from Composed Stage of root layer
"""
    endTimeCode = 1
    framesPerSecond = 24
    metersPerUnit = 1
    startTimeCode = 1
    timeCodesPerSecond = 24
    upAxis = "Y"
)

def Xform "import_dense" (
    apiSchemas = ["MaterialBindingAPI"]
    kind = "component"
)
{
    rel material:binding = </materials/udim_dense_example>
    matrix4d xformOp:transform:transform1 = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (-1, 0, 1, 1) )
    uniform token[] xformOpOrder = ["xformOp:transform:transform1"]

    def Mesh "mesh_0"
    {
        float3[] extent = [(-0.5, -0.5, -0.5), (0.5, 0.5, 0.5)]
        int[] faceVertexCounts = [4, 4, 4, 4, 4, 4]
        int[] faceVertexIndices = [0, 1, 3, 2, 4, 5, 7, 6, 6, 7, 2, 3, 5, 4, 1, 0, 5, 0, 2, 7, 1, 4, 6, 3]
        uniform token orientation = "leftHanded"
        point3f[] points = [(0.5, -0.5, 0.5), (-0.5, -0.5, 0.5), (0.5, 0.5, 0.5), (-0.5, 0.5, 0.5), (-0.5, -0.5, -0.5), (0.5, -0.5, -0.5), (-0.5, 0.5, -0.5), (0.5, 0.5, -0.5)] (
            interpolation = "vertex"
        )
        texCoord2f[] primvars:st = [(2.941, 0.05), (2.056, 0.05), (2.056, 0.93500006), (2.941, 0.93500006), (0.93500006, 0.05), (0.05, 0.05), (0.05, 0.93500006), (0.93500006, 0.93500006), (5.0650005, 0.93500006), (5.9500003, 0.93500006), (5.9500003, 0.05), (5.0650005, 0.05), (4.9470005, 0.05), (4.0620003, 0.05), (4.0620003, 0.93500006), (4.9470005, 0.93500006), (1.938, 0.05), (1.053, 0.05), (1.053, 0.93500006), (1.938, 0.93500006), (3.9440002, 0.05), (3.0590003, 0.05), (3.0590003, 0.93500006), (3.9440002, 0.93500006)] (
            interpolation = "faceVarying"
        )
        int[] primvars:st:indices = None
        uniform token subdivisionScheme = "none"
    }
}

def Xform "import_sparse" (
    kind = "component"
)
{
    matrix4d xformOp:transform:transform2 = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (1, 0, -1, 1) )
    uniform token[] xformOpOrder = ["xformOp:transform:transform2"]

    def Mesh "mesh_0" (
        apiSchemas = ["MaterialBindingAPI"]
    )
    {
        float3[] extent = [(-0.5, -0.5, -0.5), (0.5, 0.5, 0.5)]
        int[] faceVertexCounts = [4, 4, 4, 4, 4, 4]
        int[] faceVertexIndices = [0, 1, 3, 2, 4, 5, 7, 6, 6, 7, 2, 3, 5, 4, 1, 0, 5, 0, 2, 7, 1, 4, 6, 3]
        rel material:binding = </materials/udim_sparse_example>
        uniform token orientation = "leftHanded"
        point3f[] points = [(0.5, -0.5, 0.5), (-0.5, -0.5, 0.5), (0.5, 0.5, 0.5), (-0.5, 0.5, 0.5), (-0.5, -0.5, -0.5), (0.5, -0.5, -0.5), (-0.5, 0.5, -0.5), (0.5, 0.5, -0.5)] (
            interpolation = "vertex"
        )
        texCoord2f[] primvars:st = [(0.96684945, 1.02), (0.02, 1.02), (0.02, 1.9668496), (0.96684945, 1.9668496), (1.9668496, 2.02), (1.02, 2.02), (1.02, 2.9668496), (1.9668496, 2.9668496), (0.02, 0.96684945), (0.96684945, 0.96684945), (0.96684945, 0.02), (0.02, 0.02), (1.9668496, 0.02), (1.02, 0.02), (1.02, 0.96684945), (1.9668496, 0.96684945), (0.96684945, 2.02), (0.02, 2.02), (0.02, 2.9668496), (0.96684945, 2.9668496), (1.9668496, 1.02), (1.02, 1.02), (1.02, 1.9668496), (1.9668496, 1.9668496)] (
            interpolation = "faceVarying"
        )
        int[] primvars:st:indices = None
        uniform token subdivisionScheme = "none"
    }
}

def Scope "materials"
{
    def Material "udim_dense_example"
    {
        token outputs:mtlx:surface.connect = </materials/udim_dense_example/udim_dense_example.outputs:out>

        def Shader "udim_dense_example"
        {
            uniform token info:id = "ND_surface"
            string inputs:bsdf.connect = </materials/udim_dense_example/mtlxmix1.outputs:out>
            token outputs:out
        }

        def Shader "mtlxmix1"
        {
            uniform token info:id = "ND_mix_bsdf"
            string inputs:bg.connect = </materials/udim_dense_example/mtlxoren_nayar_diffuse_bsdf2.outputs:out>
            string inputs:fg.connect = </materials/udim_dense_example/mtlxoren_nayar_diffuse_bsdf1.outputs:out>
            float inputs:mix = 0.5
            token outputs:out
        }

        def Shader "mtlxoren_nayar_diffuse_bsdf1"
        {
            uniform token info:id = "ND_oren_nayar_diffuse_bsdf"
            color3f inputs:color.connect = </materials/udim_dense_example/mtlximage1.outputs:out>
            token outputs:out
        }

        def Shader "mtlximage1"
        {
            uniform token info:id = "ND_image_color3"
            asset inputs:file = @textures/udims_dense/udim_test.<UDIM>.png@
            color3f outputs:out
        }

        def Shader "mtlxoren_nayar_diffuse_bsdf2"
        {
            uniform token info:id = "ND_oren_nayar_diffuse_bsdf"
            color3f inputs:color.connect = </materials/udim_dense_example/mtlximage1.outputs:out>
            token outputs:out
        }
    }

    def Material "udim_sparse_example"
    {
        token outputs:mtlx:surface.connect = </materials/udim_sparse_example/udim_sparse_example.outputs:out>

        def Shader "udim_sparse_example"
        {
            uniform token info:id = "ND_surface"
            string inputs:bsdf.connect = </materials/udim_sparse_example/mtlxmix2.outputs:out>
            token outputs:out
        }

        def Shader "mtlxmix2"
        {
            uniform token info:id = "ND_mix_bsdf"
            string inputs:bg.connect = </materials/udim_sparse_example/mtlxoren_nayar_diffuse_bsdf4.outputs:out>
            string inputs:fg.connect = </materials/udim_sparse_example/mtlxoren_nayar_diffuse_bsdf3.outputs:out>
            float inputs:mix = 0.5
            token outputs:out
        }

        def Shader "mtlxoren_nayar_diffuse_bsdf3"
        {
            uniform token info:id = "ND_oren_nayar_diffuse_bsdf"
            color3f inputs:color.connect = </materials/udim_sparse_example/mtlximage2.outputs:out>
            token outputs:out
        }

        def Shader "mtlximage2"
        {
            uniform token info:id = "ND_image_color3"
            asset inputs:file = @textures/udims_sparse/udim_test.<UDIM>.png@
            color3f outputs:out
        }

        def Shader "mtlxoren_nayar_diffuse_bsdf4"
        {
            uniform token info:id = "ND_oren_nayar_diffuse_bsdf"
            color3f inputs:color.connect = </materials/udim_sparse_example/mtlximage2.outputs:out>
            token outputs:out
        }
    }
}

