## Simple test scene for creating different types of geometry.
## Both instanced and non-instanced.

# Create environment map

envMap = EnvMap('envmaps/20060807_wells6_hd.hdr')
envMap.intensity = 3
sceneBuilder.envMap = envMap

# Create geometry

sphereMesh = TriangleMesh.createSphere()

# Create set of instanced meshes
# Each column is a new mesh, each row is an instance of the mesh

NX = 4
NY = 4
SPACING = 2.5

for x in range(NX):

    # Create material
    roughness =  1 - x / float(NX - 1)
    metallic = 1 - roughness

    name = 'roughness={:.2f}, metallic={:.2f}'.format(roughness, metallic)

    material = StandardMaterial(name)
    material.baseColor = float4(0.5, 0.5, 0.5, 1.0)
    material.roughness = roughness
    material.metallic = metallic

    # Create mesh
    sphereMeshID = sceneBuilder.addTriangleMesh(sphereMesh, material)

    # Create instances
    for y in range(NY):
        translation = float3(x * SPACING, y * SPACING, 0)

        sceneBuilder.addMeshInstance(
            sceneBuilder.addNode(name, Transform(translation=translation)),
            sphereMeshID
        )

# Create custom primitives (non-instanced)

for x in range(NX):
    for y in range(NY):
        translation = float3((NX + x) * SPACING, y * SPACING, 0)

        # Assign different userID fields to each column of primitives
        userID = x

        sceneBuilder.addCustomPrimitive(userID, AABB(translation - 0.25 * SPACING, translation + 0.25 * SPACING))


# Create camera

centerX = 0.5 * SPACING * (2 * NX - 1)
centerY = 0.5 * SPACING * (NY - 1)

camera = Camera()
camera.position = float3(centerX, centerY, 3 * max(centerX, centerY))
camera.target = float3(centerX, centerY, 0)
camera.up = float3(0, 1, 0)
camera.focalLength = 35
sceneBuilder.addCamera(camera)
sceneBuilder.cameraSpeed = 20
